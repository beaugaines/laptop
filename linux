#!/usr/bin/env bash
CLEAR="\033[0m"
ORANGE="\033[33m"

successfully() {
  $* || (echo "failed" 1>&2 && exit 1)
}

fancy_echo() {
  echo -e ${ORANGE}$1${CLEAR}
  echo
}

RELEASE=`lsb_release -cs`

if echo $RELEASE | grep -qEv 'utopic|trusty|precise'
then
 fancy_echo "Sorry! we don't currently support that distro."
 exit 1;
fi

if echo $RELEASE | grep -qE 'utopic'
then
  RELEASE='trusty'
fi

fancy_echo 'Adding postgres repository'
  successfully sudo echo "deb http://apt.postgresql.org/pub/repos/apt/ ${RELEASE}-pgdg main" >> /etc/apt/sources.list.d/pgdg.list
  successfully wget --quiet -O - http://apt.postgresql.org/pub/repos/apt/ACCC4CF8.asc | sudo apt-key add -

fancy_echo "Adding node and sublime repositories"
  successfully sudo add-apt-repository -y ppa:webupd8team/sublime-text-2
  successfully curl -sL https://deb.nodesource.com/setup | sudo bash -

fancy_echo "Updating system packages ..."
  if command -v aptitude >/dev/null; then
    fancy_echo "Using aptitude ..."
  else
    fancy_echo "Installing aptitude ..."
    successfully sudo apt-get install -y aptitude
  fi
  successfully sudo aptitude update
  successfully sudo aptitude -y dist-upgrade

fancy_echo "Installing base packages ..."
  successfully sudo aptitude install -y git-core curl zlib1g-dev build-essential libssl-dev libreadline-dev libyaml-dev libsqlite3-dev sqlite3 libxml2-dev libxslt1-dev libcurl4-openssl-dev python-software-properties texinfo tree nodejs gimp inkscape

fancy_echo "Configuring node ..."
  successfully npm config set prefix /usr/local
  successfully echo "export NODE_PATH=$NODE_PATH:/usr/local/lib/node_modules" >> ~/.bashrc && source ~/.bashrc

fancy_echo "Installing some useful node libraries ..."
  successfully npm install -g express grunt-cli yo gulp bower

fancy_echo "Installing sublime text ..."
  successfully sudo aptitude install -y sublime-text

fancy_echo "Installing Postgres, a good open source relational database ..."
  successfully sudo aptitude install -y postgresql postgresql-contrib pgadmin3

fancy_echo "Installing The Silver Searcher (better than ack or grep) to search the contents of files ..."
  successfully git clone git://github.com/ggreer/the_silver_searcher.git /tmp/the_silver_searcher
  successfully sudo aptitude install -y automake pkg-config libpcre3-dev zlib1g-dev liblzma-dev
  successfully sh /tmp/the_silver_searcher/build.sh
  successfully cd /tmp/the_silver_searcher
  successfully sh build.sh
  successfully sudo make install
  successfully cd ~
  successfully rm -rf /tmp/the_silver_searcher

fancy_echo "Installing ctags, to index files for vim tab completion of methods, classes, variables ..."
  successfully sudo aptitude install -y exuberant-ctags

fancy_echo "Installing vim ..."
  successfully sudo aptitude install -y vim-nox

fancy_echo "Installing tmux, to save project state and switch between projects ..."
  successfully sudo aptitude install -y tmux

fancy_echo "Installing ImageMagick and Graphicsmagick, to crop and resize images ..."
  successfully sudo aptitude install -y imagemagick graphicsmagick

fancy_echo "Installing watch, to execute a program periodically and show the output ..."
  successfully sudo aptitude install -y watch

fancy_echo "Installing rbenv and ruby-build, to change Ruby versions ..."
  successfully git clone git://github.com/sstephenson/rbenv.git ~/.rbenv
  successfully echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> ~/.bashrc
  successfully echo 'eval "$(rbenv init -)"' >> ~/.bashrc
  successfully exec $SHELL
  successfully git clone git://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build
  successfully echo 'export PATH="$HOME/.rbenv/plugins/ruby-build/bin:$PATH"' >> ~/.bashrc
  successfully exec $SHELL

fancy_echo "Add default gems for all rubies installed with rbenv"
  successfully echo 'rails' >> ~/.rbenv/default-gems
  successfully echo 'bundler' >> ~/.rbenv/default-gems
  successfully echo 'rubygems-bundler' >> ~/.rbenv/default-gems
  successfully echo 'pry' >> ~/.rbenv/default-gems

fancy_echo "Setting up .gemrc for no documentation"
  successfully echo 'gem:  --no-ri --no-rdoc' >> ~/.gemrc

fancy_echo "Installing Ruby 2.1.5 ..."
  successfully rbenv install 2.1.5

fancy_echo "Setting Ruby 2.1.5 as global default Ruby ..."
  successfully rbenv global 2.1.5
  successfully rbenv shell 2.1.5

fancy_echo "Enable rubygems-bundler (no more bundle exec!)"
  successfully gem regenerate_binstubs

fancy_echo "Installing GitHub CLI client ..."
  successfully curl http://hub.github.com/standalone -sLo ~/.bin/hub
  successfully chmod +x ~/.bin/hub

fancy_echo "Installing Heroku CLI client ..."
  successfully wget -qO- https://toolbelt.heroku.com/install-ubuntu.sh | sh

fancy_echo "Installing the heroku-config plugin to pull config variables locally to be used as ENV variables ..."
  successfully heroku plugins:install git://github.com/ddollar/heroku-config.git
